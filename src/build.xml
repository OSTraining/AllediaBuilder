<?xml version="1.0" encoding="UTF-8"?>
<project name="Alledia Joomla Phing Builder" default="current-release">
    <property name="builder.version" value="3.0.2"/>

    <!-- Include the external tasks -->
    <includepath classpath="${builder.path}/src/tasks"/>
    <taskdef name="propertiesfromcomposer" classname="PropertiesFromComposerTask"/>
    <taskdef name="setversion" classname="SetversionTask"/>
    <taskdef name="getversion" classname="GetVersionTask"/>
    <taskdef name="checkbranch" classname="CheckBranchTask"/>
    <taskdef name="mergefiles" classname="MergeFilesTask"/>
    <taskdef name="getrelatedextensions" classname="RelatedExtensionsTask"/>

    <!-- Properties -->
    <property name="project.path" value="${project.basedir}"/>
    <propertiesfromcomposer file="${project.path}/composer.json"/>

    <if>
        <isset property="fix.jenkins.symlinks.path"/>
        <then>
            <!-- We are running on a Jenkins environment, so let's fix the paths creating symlinks for this project  -->
            <symlink target="${project.path}" link="${fix.jenkins.symlinks.path}/${composer.extra.name}" overwrite="true"/>

            <property name="repositories.path" value="${fix.jenkins.symlinks.path}"/>
        </then>
        <else>
            <!-- We are running on a normal environment, so let's use the parent folder -->
            <property name="repositories.path" value="${project.path}/.."/>
        </else>
    </if>

    <property name="debug" value="0"/>
    <property name="installer.source.path" value="${repositories.path}/AllediaInstaller/src"/>
    <property name="project.source.path" value="${project.path}/src"/>
    <property name="project.source.free.path" value="${repositories.path}/${composer.extra.name}/src"/>
    <property name="project.name.short" value="${composer.extra.element-short}"/>
    <property name="project.name.long" value="${composer.extra.element}"/>

    <!-- Check if we are building the package directly or as a related extension -->
    <!-- If it is a related extension, we will receive these properties from the command line -->
    <if>
        <not>
            <isset property="packages.tmp.path"/>
        </not>
        <then>
            <!-- We are building the package directly -->
            <property name="packages.path" value="${project.path}/packages"/>
            <property name="packages.tmp.path" value="${packages.path}/tmp"/>
            <property name="buildingdirectly" value="1"/>
        </then>
        <else>
            <property name="buildingdirectly" value="0"/>
        </else>
    </if>

    <if>
        <equals arg1="${composer.type}" arg2="joomla.component"/>
        <then>
            <property name="installer.tmp.path" value="${packages.tmp.path}/admin"/>
        </then>
        <else>
            <property name="installer.tmp.path" value="${packages.tmp.path}"/>
        </else>
    </if>

    <property name="extensions.tmp.path" value="${packages.tmp.path}/extensions"/>

    <!-- Display basic information -->
    <echo message="Version ${builder.version} for Joomla! extensions"/>

    <!-- Parse the manifest file and get properties -->
    <property name="project.manifest" value="${project.source.path}/${project.name.short}.xml"/>
    <if>
        <available file="${project.manifest}" property="project.manifest.exists"/>
        <then/>
        <else>
            <property name="project.manifest" value="${project.source.path}/${project.license}_${project.name.short}.xml" override="true"/>
        </else>
    </if>
    <xmlproperty file="${project.manifest}" prefix="manifest" keepRoot="false" />

    <getrelatedextensions file="${project.manifest}" property="project.relatedExtensions" ignoreRelatedExtensions="${ignoreRelatedExtensions}"/>

    <getversion file="${project.manifest}" property="project.version"/>

    <import file="${builder.path}/src/projects/development.xml"/>
    <import file="${builder.path}/src/projects/release.xml"/>
    <import file="${builder.path}/src/projects/symlinker.xml"/>
</project>
