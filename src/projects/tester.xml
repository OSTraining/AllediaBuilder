<?xml version="1.0" encoding="UTF-8"?>
<project name="Tester" default="test">
    <!-- TODO: Split tests into groups and run them in parallel. Keep the install extension test in a group and commit the container to reuse in the next tests
     http://codeception.com/docs/07-AdvancedUsage#Groups, http://codeception.com/docs/12-ParallelExecution#Step-1-Split-Tests -->
    <target name="test">
        <!-- Build a package to be tested -->
        <property name="package.file" value="${project.name.long}_${composer.extra.package-license}_${manifest.version}.zip"/>
        <property name="memory" value="512MB" />
        <phingcall target="build" />

        <!-- Move the built file to the _data folder -->
        <echo>Moving the built package to the _data folder to be installed</echo>
        <copy file="${packages.path}/${package.file}" tofile="${project.path}/tests/_output/extension_installer.zip" />
        <delete dir="${project.path}/tests/_output/extension_installer" />
        <unzip file="${project.path}/tests/_output/extension_installer.zip" todir="${project.path}/tests/_output/extension_installer" />

        <parallel threadCount="2">
            <phingcall target="test-in-joomla">
                <property name="joomla.version" value="25" />
            </phingcall>

            <phingcall target="test-in-joomla">
                <property name="joomla.version" value="34" />
            </phingcall>
        </parallel>
    </target>

    <target name="test-in-joomla">
        <property name="line.prefix" value="j${joomla.version} :::" />
        <if>
            <equals arg1="${joomla${joomla.version}.support}" arg2="1"/>
            <then>
                <!-- Load a docker container from alledia/joomlaXXtests to run the tests -->
                <property name="container.name" value="allediabuilder_${project.name.long}_j${joomla.version}_tests" />
                <trycatch property="catchOutput">
                    <try>
                        <echo>${line.prefix} Wait... preparing the test environment for j${joomla.version}</echo>
                        <echo level="debug">${line.prefix} Cleanup existent containers...</echo>
                        <exec command="docker rm -f ${container.name}" />
                        <property name="command1" value="docker run -m ${memory} -d --name ${container.name} -p ::80 -p ::4444 -v ${project.path}:/project -v ${builder.path}:/builder alledia/joomla-codeception:joomla${joomla.version}" />
                        <exec command="${command1}" outputProperty="container.id" returnProperty="container.result" checkreturn="true" />
                        <echo level="debug">${line.prefix} ${command1}</echo>
                        <echo level="debug">${line.prefix} Started a new container tests: ${container.name} (${container.id})</echo>

                        <!-- Delay of 10s waiting for MySQL to be ready - TODO: Change for a real service status checker -->
                        <echo level="debug">${line.prefix} Waiting for the MySQL to be ready...</echo>
                        <exec command="php -r 'usleep(15000000);'" />

                        <!-- Install the package into the container running a test -->
                        <echo>${line.prefix} Hold on, running the extension's tests in j${joomla.version}...</echo>

                        <property name="command2" value="docker exec ${container.name} codecept run ${params} --no-colors --html /project/tests/_output/report_joomla${joomla.version}.html -c /project" />
                        <exec command="${command2}" returnProperty="tests.result" outputProperty="tests.output" checkreturn="true" />

                        <echo level="debug">${line.prefix} ${command2}</echo>
                        <echo level="debug">${line.prefix} ${tests.output}</echo>
                        <echo level="warning">${line.prefix} Good Job! :)  Your tests passed succesfully for j${joomla.version}</echo>
                    </try>
                    <catch>
                        <!-- Error/Exception found -->
                        <echo level="error">${line.prefix} Wow man :(  I have detected errors or failed tests:${line.separator}${catchOutput}${line.separator}${line.separator}Command: ${command2}${line.separator}Output: ${tests.output}</echo>
                    </catch>
                    <finally>
                        <!-- Stop and remove the containers -->
                        <echo level="debug">${line.prefix} Removing the container ${container.id}</echo>
                        <exec command="docker rm -f ${container.id}" />
                    </finally>
                </trycatch>
            </then>
        </if>
    </target>

    <target name="test-bootstrap">
        <!-- Check if we already are bootstrapped -->
        <if>
            <available file="${project.path}/codeception.yml" />
            <then>
                <echo level="warning">It seems like your project already have the tests set up.</echo>
                <echo level="info">If you would like to bootstrap it again, please remove:${line.separator}${line.separator}                ./tests${line.separator}                ./codeception.yml</echo>
            </then>
            <else>
                <!-- Run the Codeception bootstrap -->
                <exec command="docker run -d -v ${project.path}:/project -m ${memory} alledia/codeception" returnProperty="container.result" outputProperty="container.id" />
                <exec command="docker exec ${container.id} codecept bootstrap /project" outputProperty="container.output" />
                <exec command="docker rm ${container.id}" />

                <!-- Check the basic files -->
                <condition property="bootstrapped">
                    <and>
                        <available file="${project.path}/codeception.yml" property="codeception.yml.available" />
                        <available file="${project.path}/tests" property="codeception.tests.available" />
                    </and>
                </condition>
                <if>
                    <equals arg1="${bootstrapped}" arg2="true" />
                    <then>
                        <echo>Codeception is bootstrapped successfully</echo>
                        <!-- Check the build.properties file -->
                        <echo>Checking build.properties file for Joomla 2.5 and Joomla 3.4 support properties</echo>
                        <if>
                            <contains string="${joomla25.support}" substring="${" />
                            <then>
                                <echo file="${project.path}/build.properties" append="true">${line.separator}joomla25.support=1</echo>
                            </then>
                        </if>
                        <if>
                            <contains string="${joomla34.support}" substring="${" />
                            <then>
                                <echo file="${project.path}/build.properties" append="true">${line.separator}joomla34.support=1</echo>
                            </then>
                        </if>

                        <!-- Creates the acceptance.suite.yml file-->
                        <echo>Creating the default acceptance.suite.yml file</echo>
                        <echo file="${project.path}/tests/acceptance.suite.yml"><![CDATA[# Codeception Test Suite Configuration
# suite for acceptance tests.
# perform tests in browser using the WebDriver or PhpBrowser.
# If you need both WebDriver and PHPBrowser tests - create a separate suite.

class_name: AcceptanceTester
modules:
    enabled:
        - WebDriver
        - AcceptanceHelper
    config:
        WebDriver:
            url: 'http://127.0.0.1'
            browser: phantomjs
            host: localhost
            port: 4444
            window_size: 1200x768
            wait: 10
            restart: true
            capabilities:
                webStorageEnabled: true
                takesScreenshot: true
                cssSelectorsEnabled: true]]></echo>

                        <!-- Fill the bootstrap file -->
                        <echo>Creating the default _bootstrap.php file, inheriting from AllediaBuilder</echo>
                        <echo file="${project.path}/tests/_bootstrap.php" append="true">${line.separator}// Load the bootstrap file from Alledia Builder${line.separator}require_once '/builder/src/codeception/_bootstrap.php';</echo>

                        <!-- Create the installer acceptance test -->
                        <echo file="${project.path}/tests/acceptance/AAAExtensionInstallerCest.php"><![CDATA[<?php
use \AcceptanceTester;

require_once ALLEDIA_BUILDER_PATH . '/src/codeception/acceptance/ExtensionInstallerAbstractCest.php';

class AAAExtensionInstallerCest extends ExtensionInstallerAbstractCest
{

}
]]></echo>
                        <echo>Tests bootstrapped successfully!</echo>
                    </then>
                    <else>
                        <echo level="error">Error: ${container.output}</echo>
                    </else>
                </if>
            </else>
        </if>
    </target>
</project>
